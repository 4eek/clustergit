#!/usr/bin/python

# @desc     Tired of having to go into each sub dir to find out whether or 
#           not you did a git commit? Tire no more, just use this!
#           
# @usage    ./showstatus [location]
# @author   Mike Pearce <mike@mikepearce.net>
# @since    18/05/2010

# Grab some libraries
import sys
import os
import glob
import commands

# Setup some stuff
dirname        = './'

#-------------------
def show_usage():
#-------------------
    """Print the program usage to the screen"""
    
    sys.stdout.write("\nUsage: syncR [source] [destination] [deleteDestFiles] ")
    
#-------------------
def show_error(error="Undefined Error!"):
#-------------------
    """Writes an error to stderr"""
    sys.stderr.write(error)
    show_usage()
    sys.exit(1)
    
#-------------------
def file_dir_exists(file_or_dir):
#-------------------
    """Checks to see if the file, or dir eists"""
    if True == os.path.isdir(file_or_dir):
        return True

    if True == os.path.isfile(file_or_dir):
        return True

    return False
    
#-------------------
# Now, onto the main event!
#-------------------
if __name__ == "__main__":
    os.system('clear')
    sys.stdout.write('-- Starting git status...\n')
    
    # Check to make sure we have all the required arguments
    try:
        (scriptName, dirname) = sys.argv
    except ValueError:
        sys.stdout.write('Using default dir\n')
        
    sys.stdout.write('Scanning sub directories of %s\n' %dirname)
    
    # See whats here
    for infile in glob.glob( os.path.join(dirname, '*') ):

        #is there a .git file
        if os.path.exists(infile + "/.git"):
            #Print some repo details
            sys.stdout.write("\n---------------- "+ infile +" -----------------\n")
            
            # OK, contains a .git file. Let's descend into it
            # and ask git for a status
            out = commands.getoutput('cd '+ infile + '; git status;' + 'cd ../')
            sys.stdout.write(out)
            sys.stdout.write("\n---------------- "+ infile +" -----------------\n")
            

    sys.stdout.write("Done\n")
      